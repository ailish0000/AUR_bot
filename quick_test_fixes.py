#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json

def test_magnesium_in_kb():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –º–∞–≥–Ω–∏—è –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–≥–Ω–∏–π –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π...")
    
    try:
        with open("knowledge_base.json", "r", encoding="utf-8") as f:
            kb_data = json.load(f)
        
        magnesium_products = []
        for product in kb_data:
            product_name = product.get("product", "").lower()
            if "–º–∞–≥–Ω–∏–π" in product_name:
                magnesium_products.append(product.get("product", ""))
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –º–∞–≥–Ω–∏–µ–º: {len(magnesium_products)}")
        for product in magnesium_products:
            print(f"  - {product}")
            
        return len(magnesium_products) > 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_argent_in_kb():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ê—Ä–≥–µ–Ω—Ç-–ú–∞–∫—Å –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ê—Ä–≥–µ–Ω—Ç-–ú–∞–∫—Å –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π...")
    
    try:
        with open("knowledge_base.json", "r", encoding="utf-8") as f:
            kb_data = json.load(f)
        
        argent_products = []
        for product in kb_data:
            product_name = product.get("product", "").lower()
            if "–∞—Ä–≥–µ–Ω—Ç" in product_name:
                argent_products.append({
                    "name": product.get("product", ""),
                    "url": product.get("url", ""),
                    "image_id": product.get("image_id", "")
                })
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –ê—Ä–≥–µ–Ω—Ç: {len(argent_products)}")
        for product in argent_products:
            print(f"  - {product['name']}")
            print(f"    URL: {product['url']}")
            print(f"    Image ID: {product['image_id']}")
            
        return len(argent_products) > 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_smart_search_engine():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ smart_search_engine.py"""
    print("\nüîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ smart_search_engine.py...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–∞–≥–Ω–∏—è –≤ —Å–∏–Ω–æ–Ω–∏–º–∞—Ö
        with open("smart_search_engine.py", "r", encoding="utf-8") as f:
            content = f.read()
        
        has_magnesium_synonyms = '"–º–∞–≥–Ω–∏–π"' in content and 'magnesium' in content
        has_magnesium_expansion = 'expanded_terms.append("–º–∞–≥–Ω–∏–π")' in content
        
        print(f"‚úÖ –ú–∞–≥–Ω–∏–π –≤ —Å–∏–Ω–æ–Ω–∏–º–∞—Ö: {'–î–ê' if has_magnesium_synonyms else '–ù–ï–¢'}")
        print(f"‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –º–∞–≥–Ω–∏—è: {'–î–ê' if has_magnesium_expansion else '–ù–ï–¢'}")
        
        return has_magnesium_synonyms and has_magnesium_expansion
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_bot_context():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ bot.py"""
    print("\nü§ñ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ bot.py...")
    
    try:
        with open("bot.py", "r", encoding="utf-8") as f:
            content = f.read()
        
        has_magnesium_context = '"–º–∞–≥–Ω–∏–π"' in content and '"–∫–∞–ª—å—Ü–∏–π"' in content
        has_context_fix = 'len(text) > 30' in content
        
        print(f"‚úÖ –ú–∞–≥–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: {'–î–ê' if has_magnesium_context else '–ù–ï–¢'}")
        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {'–î–ê' if has_context_fix else '–ù–ï–¢'}")
        
        return has_magnesium_context and has_context_fix
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üß™ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô")
    print("=" * 50)
    
    results = []
    results.append(test_magnesium_in_kb())
    results.append(test_argent_in_kb())
    results.append(test_smart_search_engine())
    results.append(test_bot_context())
    
    print("\n" + "=" * 50)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {sum(results)}/{len(results)}")
    
    if all(results):
        print("üéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")




