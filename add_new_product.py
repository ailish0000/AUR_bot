import json

def add_product_to_new_db(product_data):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –≤ knowledge_base_new.json
    """
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏–∑ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
        with open('knowledge_base_new.json', 'r', encoding='utf-8') as f:
            products = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–≥–æ ID
        existing_ids = [p['id'] for p in products]
        if product_data['id'] in existing_ids:
            print(f"‚ö†Ô∏è  –ü—Ä–æ–¥—É–∫—Ç —Å ID '{product_data['id']}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return False
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
        products.append(product_data)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open('knowledge_base_new.json', 'w', encoding='utf-8') as f:
            json.dump(products, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –ü—Ä–æ–¥—É–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ knowledge_base_new.json")
        print(f"üìä –í—Å–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –Ω–æ–≤–æ–π –±–∞–∑–µ: {len(products)}")
        print(f"üÜï –î–æ–±–∞–≤–ª–µ–Ω: {product_data['product']}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞: {e}")
        return False

def show_all_databases():
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Å–µ–º –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö
    """
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó –î–ê–ù–ù–´–•:")
    print("=" * 50)
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞
    try:
        with open('knowledge_base.json', 'r', encoding='utf-8') as f:
            main_products = json.load(f)
        print(f"üìÅ knowledge_base.json: {len(main_products)} –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
    except:
        print("üìÅ knowledge_base.json: ‚ùå –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å")
    
    # –ù–æ–≤–∞—è –±–∞–∑–∞
    try:
        with open('knowledge_base_new.json', 'r', encoding='utf-8') as f:
            new_products = json.load(f)
        print(f"üìÅ knowledge_base_new.json: {len(new_products)} –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
        
        if new_products:
            print("\nüÜï –ù–û–í–´–ï –ü–†–û–î–£–ö–¢–´:")
            for i, product in enumerate(new_products, 1):
                print(f"  {i}. {product['product']}")
    except:
        print("üìÅ knowledge_base_new.json: ‚ùå –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å")

if __name__ == "__main__":
    show_all_databases()






