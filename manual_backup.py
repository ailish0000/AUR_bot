import json

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
with open('knowledge_base.json', 'r', encoding='utf-8') as f:
    all_products = json.load(f)

print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(all_products)} –ø—Ä–æ–¥—É–∫—Ç–æ–≤")

# –°–æ–∑–¥–∞–µ–º core –±–∞–∑—É (–ø–µ—Ä–≤—ã–µ 30 —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤)
core_products = all_products[:30]

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
files_to_create = [
    ('knowledge_base_backup.json', all_products, '–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è'),
    ('knowledge_base_core.json', core_products, 'Core –±–∞–∑–∞'),
    ('knowledge_base_full.json', all_products, 'Full –±–∞–∑–∞')
]

for filename, data, description in files_to_create:
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)
    print(f"‚úÖ {description}: {filename} ({len(data)} –ø—Ä–æ–¥—É–∫—Ç–æ–≤)")

print(f"\nüî• CORE –ë–ê–ó–ê (–¢–û–ü-{len(core_products)} –ø—Ä–æ–¥—É–∫—Ç–æ–≤):")
for i, product in enumerate(core_products, 1):
    print(f"{i:2d}. {product['product']}")

print(f"\nüöÄ –ì–æ—Ç–æ–≤–æ! –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞.")






