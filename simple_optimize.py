import json
import shutil

print("–°–æ–∑–¥–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

# 1. –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
try:
    shutil.copy('knowledge_base.json', 'knowledge_base_backup.json')
    print("‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {e}")
    exit(1)

# 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã
try:
    with open('knowledge_base.json', 'r', encoding='utf-8') as f:
        all_products = json.load(f)
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(all_products)} –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã: {e}")
    exit(1)

# 3. –°–æ–∑–¥–∞–µ–º CORE –±–∞–∑—É - –ø–µ—Ä–≤—ã–µ 30 –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (—Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ)
core_products = all_products[:30]

# 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã
try:
    # Core –±–∞–∑–∞
    with open('knowledge_base_core.json', 'w', encoding='utf-8') as f:
        json.dump(core_products, f, ensure_ascii=False, indent=2)
    
    # Full –±–∞–∑–∞ (–∫–æ–ø–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª–∞)
    with open('knowledge_base_full.json', 'w', encoding='utf-8') as f:
        json.dump(all_products, f, ensure_ascii=False, indent=2)
    
    print("‚úÖ –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
    exit(1)

# 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
print(f"üìÅ knowledge_base_core.json - {len(core_products)} –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
print(f"üìÅ knowledge_base_full.json - {len(all_products)} –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤") 
print(f"üìÅ knowledge_base_backup.json - —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è")

print(f"\nüî• CORE –ë–ê–ó–ê (–ø–µ—Ä–≤—ã–µ 10 –∏–∑ {len(core_products)}):")
for i, product in enumerate(core_products[:10], 1):
    print(f"{i:2d}. {product['product']}")

print(f"\nüöÄ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
print(f"üí° Core –±–∞–∑–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –≤ ~{len(all_products)//len(core_products)}x —Ä–∞–∑ –±—ã—Å—Ç—Ä–µ–µ")






